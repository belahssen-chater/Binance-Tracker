apiVersion: batch/v1
kind: Job
metadata:
  name: kibana-system-setup
  namespace: elk-stack
spec:
  template:
    spec:
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-elasticsearch
        image: curlimages/curl:latest
        command: ['sh', '-c']
        args:
          - |
            echo "Waiting for Elasticsearch to be ready..."
            while ! curl -s -u elastic:${ELASTIC_PASSWORD} http://elasticsearch:9200/_cluster/health; do
              echo "Elasticsearch not ready yet, waiting 10 seconds..."
              sleep 10
            done
            echo "Elasticsearch is ready!"
        env:
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elk-credentials
              key: elastic-password
      containers:
      - name: setup-kibana-user
        image: curlimages/curl:latest
        command: ['sh', '-c']
        args:
          - |
            echo "Setting up kibana_system user password..."
            
            # Set password for kibana_system user
            curl -X POST "http://elasticsearch:9200/_security/user/kibana_system/_password" \
              -u elastic:${ELASTIC_PASSWORD} \
              -H "Content-Type: application/json" \
              -d '{
                "password": "Protel2025!"
              }'
            
            echo ""
            echo "kibana_system user password set successfully!"
            
            # Verify the user
            echo "Verifying kibana_system user..."
            curl -X GET "http://elasticsearch:9200/_security/user/kibana_system" \
              -u elastic:${ELASTIC_PASSWORD}
            
            echo ""
            echo "Kibana system setup completed!"
        env:
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elk-credentials
              key: elastic-password
  backoffLimit: 3
